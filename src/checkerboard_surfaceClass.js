// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  ({
    rt: (typeof exports !== "undefined" && exports !== null) && exports || this.rt || (this.rt = {})
  });

  rt.CheckerboardSurface = (function(_super) {

    __extends(CheckerboardSurface, _super);

    function CheckerboardSurface() {
      this.roughness = 150;
    }

    CheckerboardSurface.prototype.IsValid = function() {
      return rt.MathLibrary.IsValid(this.roughness);
    };

    CheckerboardSurface.prototype.Reflect = function(position) {
      if (position != null) {
        if (!(typeof position.IsValid === "function" ? position.IsValid() : void 0)) {
          throw new TypeError;
        }
      } else {
        throw new TypeError;
      }
      if ((Math.floor(position.z) + Math.floor(position.x)) % 2 !== 0) {
        return 0.1;
      } else {
        return 0.7;
      }
    };

    CheckerboardSurface.prototype.Diffuse = function(position) {
      if (position != null) {
        if (!(typeof position.IsValid === "function" ? position.IsValid() : void 0)) {
          throw new TypeError;
        }
      } else {
        throw new TypeError;
      }
      if ((Math.floor(position.z) + Math.floor(position.x)) % 2 !== 0) {
        return rt.RGBColors.white;
      } else {
        return rt.RGBColors.black;
      }
    };

    CheckerboardSurface.prototype.Specular = function(position) {
      if (position != null) {
        if (!(typeof position.IsValid === "function" ? position.IsValid() : void 0)) {
          throw new TypeError;
        }
      } else {
        throw new TypeError;
      }
      return rt.RGBColors.white;
    };

    return CheckerboardSurface;

  })(rt.Surface);

}).call(this);

// Generated by CoffeeScript 1.3.3
(function() {

  ({
    rt: (typeof exports !== "undefined" && exports !== null) && exports || this.rt || (this.rt = {})
  });

  rt.Camera = (function() {

    function Camera(position, direction) {
      var down;
      if ((position != null) && (direction != null)) {
        if (!(typeof position.IsValid === "function" ? position.IsValid() : void 0) || !(typeof direction.IsValid === "function" ? direction.IsValid() : void 0)) {
          throw new TypeError;
        }
      } else {
        throw new TypeError;
      }
      down = new rt.Vector3D(0.0, -1.0, 0.0);
      this.position = new rt.Vector3D(position.x, position.y, position.z);
      this.direction = new rt.Vector3D();
      this.direction.SetV(this.position).Add(direction).Normalize();
      this.right = new rt.Vector3D();
      this.right.SetV(this.direction.Cross(down).Normalize()).Scale(1.5);
      this.up = new rt.Vector3D();
      this.up.SetV(this.direction.Cross(this.right).Normalize()).Scale(1.5);
    }

    Camera.prototype.IsValid = function() {
      return this.position.IsValid() && this.direction.IsValid();
    };

    return Camera;

  })();

}).call(this);

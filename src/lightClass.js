// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  ({
    rt: (typeof exports !== "undefined" && exports !== null) && exports || this.rt || (this.rt = {})
  });

  rt.Light = (function(_super) {

    __extends(Light, _super);

    function Light(position, color) {
      if ((position != null) && (color != null)) {
        if (!(typeof position.IsValid === "function" ? position.IsValid() : void 0) || !(typeof color.IsValid === "function" ? color.IsValid() : void 0)) {
          throw new TypeError;
        }
      } else {
        throw new TypeError;
      }
      this.position = new rt.Vector3D(position.x, position.y, position.z);
      this.color = new rt.RGBColor(color.red, color.green, color.blue);
    }

    Light.prototype.IsValid = function() {
      return this.position.IsValid() && this.color.IsValid();
    };

    return Light;

  })(rt.Object);

}).call(this);

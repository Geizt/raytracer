// Generated by CoffeeScript 1.3.3
(function() {

  ({
    rt: (typeof exports !== "undefined" && exports !== null) && exports || this.rt || (this.rt = {})
  });

  describe('ReflectiveSurface', function() {
    var position, reflective_surface;
    position = null;
    reflective_surface = null;
    beforeEach(function() {
      position = new rt.Vector3D(2.0, 3.0, 4.0);
      reflective_surface = new rt.ReflectiveSurface();
    });
    it('is a object', function() {
      return expect(reflective_surface instanceof rt.Object).toBe(true);
    });
    it('is a surface', function() {
      return expect(reflective_surface instanceof rt.Surface).toBe(true);
    });
    it('can be validated', function() {
      var valid_reflective_surface;
      valid_reflective_surface = reflective_surface.IsValid();
      return expect(valid_reflective_surface).toBe(true);
    });
    it('has a roughness', function() {
      return expect(reflective_surface.roughness).toBe(250);
    });
    it('can reflect', function() {
      var reflection;
      reflection = reflective_surface.Reflect(position);
      return expect(reflection).toBe(0.7);
    });
    it('has a diffuse reflection', function() {
      var diffuse_reflection;
      diffuse_reflection = reflective_surface.Diffuse(position);
      expect(diffuse_reflection.red).toBe(1.0);
      expect(diffuse_reflection.green).toBe(1.0);
      return expect(diffuse_reflection.blue).toBe(1.0);
    });
    return it('has a specular reflection', function() {
      var specular_reflection;
      specular_reflection = reflective_surface.Specular(position);
      expect(specular_reflection.red).toBe(0.5);
      expect(specular_reflection.green).toBe(0.5);
      return expect(specular_reflection.blue).toBe(0.5);
    });
  });

}).call(this);
